#!/bin/bash

# –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è —Å rollback –∏ health checks

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKUP_DIR="backups"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
MAX_RETRIES=3
HEALTH_CHECK_TIMEOUT=120
COMPOSE_FILE="docker-compose.production.yml"

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${GREEN}‚ÑπÔ∏è  $1${NC}"
}

log_warn() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if ! command -v docker &> /dev/null; then
        log_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        log_error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if [ ! -f "$COMPOSE_FILE" ]; then
        log_error "–§–∞–π–ª $COMPOSE_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    if [ ! -f ".env" ]; then
        log_error "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
create_backup() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
    
    mkdir -p "$BACKUP_DIR"
    
    # Backup –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    docker-compose -f "$COMPOSE_FILE" ps > "$BACKUP_DIR/containers_$TIMESTAMP.txt" 2>/dev/null || true
    docker images > "$BACKUP_DIR/images_$TIMESTAMP.txt"
    
    # Backup Redis –¥–∞–Ω–Ω—ã—Ö
    if docker-compose -f "$COMPOSE_FILE" ps | grep -q "redis.*Up"; then
        log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ Redis –¥–∞–Ω–Ω—ã—Ö..."
        docker-compose -f "$COMPOSE_FILE" exec -T redis redis-cli --rdb "/data/backup_$TIMESTAMP.rdb" || log_warn "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å backup Redis"
    fi
    
    # Backup –ª–æ–≥–æ–≤
    if [ -d "logs" ]; then
        tar -czf "$BACKUP_DIR/logs_$TIMESTAMP.tar.gz" logs/ 2>/dev/null || log_warn "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å backup –ª–æ–≥–æ–≤"
    fi
    
    log_info "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ $BACKUP_DIR"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health check
check_health() {
    local service=$1
    local max_attempts=$2
    local attempt=1
    
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞ $service..."
    
    while [ $attempt -le $max_attempts ]; do
        if docker-compose -f "$COMPOSE_FILE" exec -T "$service" python -c "import app.main; print('OK')" &>/dev/null; then
            log_info "–°–µ—Ä–≤–∏—Å $service –∑–¥–æ—Ä–æ–≤"
            return 0
        fi
        
        log_warn "–ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts: —Å–µ—Ä–≤–∏—Å $service –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        sleep 10
        ((attempt++))
    done
    
    log_error "–°–µ—Ä–≤–∏—Å $service –Ω–µ –ø—Ä–æ—à–µ–ª health check"
    return 1
}

# –û—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏
rollback() {
    log_error "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker-compose -f "$COMPOSE_FILE" down || true
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ backup (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if [ -f "$BACKUP_DIR/docker-compose.yml.backup" ]; then
        cp "$BACKUP_DIR/docker-compose.yml.backup" docker-compose.yml
        log_info "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–µ–¥—ã–¥—É—â–∏–π docker-compose.yml"
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –≤–µ—Ä—Å–∏—é
    docker-compose -f "$COMPOSE_FILE" up -d || log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â—É—é –≤–µ—Ä—Å–∏—é"
    
    log_error "–û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã."
    exit 1
}

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
wait_for_services() {
    log_info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    local start_time=$(date +%s)
    local timeout=$HEALTH_CHECK_TIMEOUT
    
    while true; do
        local current_time=$(date +%s)
        local elapsed=$((current_time - start_time))
        
        if [ $elapsed -gt $timeout ]; then
            log_error "–¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ ($timeout —Å–µ–∫)"
            return 1
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Redis
        if docker-compose -f "$COMPOSE_FILE" exec -T redis redis-cli ping &>/dev/null; then
            log_info "Redis –≥–æ—Ç–æ–≤"
            break
        fi
        
        log_info "–û–∂–∏–¥–∞–Ω–∏–µ Redis... ($elapsed/$timeout —Å–µ–∫)"
        sleep 5
    done
    
    # –ñ–¥–µ–º –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞
    log_info "–û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞..."
    sleep 15
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è
deploy() {
    log_info "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π Telegram –±–æ—Ç–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    check_dependencies
    
    # –°–æ–∑–¥–∞–Ω–∏–µ backup
    create_backup
    
    # Backup —Ç–µ–∫—É—â–µ–≥–æ docker-compose —Ñ–∞–π–ª–∞
    if [ -f "docker-compose.yml" ]; then
        cp docker-compose.yml "$BACKUP_DIR/docker-compose.yml.backup"
    fi
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π (–µ—Å–ª–∏ –≤ git)
    if [ -d ".git" ]; then
        log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ Git..."
        git pull origin main || log_warn "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ –∏–∑ Git"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker Compose..."
    docker-compose -f "$COMPOSE_FILE" config -q || {
        log_error "–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker Compose"
        exit 1
    }
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    mkdir -p logs temp
    chmod 755 logs temp
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose -f "$COMPOSE_FILE" down || true
    
    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
    log_info "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
    docker system prune -f || log_warn "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã"
    
    # –°–±–æ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –æ–±—Ä–∞–∑–æ–≤
    log_info "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
    if ! docker-compose -f "$COMPOSE_FILE" build --no-cache; then
        log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –æ–±—Ä–∞–∑–æ–≤"
        rollback
    fi
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    log_info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    if ! docker-compose -f "$COMPOSE_FILE" up -d; then
        log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–∏—Å–æ–≤"
        rollback
    fi
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    if ! wait_for_services; then
        log_error "–°–µ—Ä–≤–∏—Å—ã –Ω–µ –≥–æ—Ç–æ–≤—ã"
        rollback
    fi
    
    # Health checks
    if ! check_health "bot" $MAX_RETRIES; then
        log_error "–ë–æ—Ç –Ω–µ –ø—Ä–æ—à–µ–ª health check"
        rollback
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose -f "$COMPOSE_FILE" ps
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    log_info "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏
    if docker-compose -f "$COMPOSE_FILE" logs --tail=50 bot | grep -i "error\|exception\|traceback" &>/dev/null; then
        log_warn "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö –±–æ—Ç–∞"
        docker-compose -f "$COMPOSE_FILE" logs --tail=20 bot
    fi
    
    log_info "‚úÖ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!"
    log_info "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
    docker-compose -f "$COMPOSE_FILE" ps
    
    log_info "üìã –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
    log_info "   docker-compose -f $COMPOSE_FILE logs -f bot"
    
    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö backup'–æ–≤ (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5)
    if [ -d "$BACKUP_DIR" ]; then
        ls -t "$BACKUP_DIR" | tail -n +6 | xargs -r rm -rf
        log_info "–û—á–∏—â–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ backup'—ã"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–û–ü–¶–ò–ò]"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  -h, --help           –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo "  -f, --file FILE      –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–π compose —Ñ–∞–π–ª (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $COMPOSE_FILE)"
    echo "  -t, --timeout SEC    –¢–∞–π–º–∞—É—Ç health check –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $HEALTH_CHECK_TIMEOUT)"
    echo "  --no-backup          –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
    echo "  --rollback TIMESTAMP –û—Ç–∫–∞—Ç–∏—Ç—å—Å—è –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0                   –û–±—ã—á–Ω—ã–π –¥–µ–ø–ª–æ–π"
    echo "  $0 -f docker-compose.yml  –î–µ–ø–ª–æ–π —Å –¥—Ä—É–≥–∏–º compose —Ñ–∞–π–ª–æ–º"
    echo "  $0 --rollback 20231201_143000  –û—Ç–∫–∞—Ç –∫ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–∞—Ç–∞ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
rollback_to_backup() {
    local backup_timestamp=$1
    
    if [ ! -d "$BACKUP_DIR" ]; then
        log_error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è backup'–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        exit 1
    fi
    
    if [ ! -f "$BACKUP_DIR/docker-compose.yml.backup" ]; then
        log_error "–§–∞–π–ª —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    log_info "–û—Ç–∫–∞—Ç –∫ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ $backup_timestamp..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker-compose -f "$COMPOSE_FILE" down || true
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    cp "$BACKUP_DIR/docker-compose.yml.backup" docker-compose.yml
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Redis –¥–∞–Ω–Ω—ã–µ
    if [ -f "$BACKUP_DIR/backup_$backup_timestamp.rdb" ]; then
        log_info "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö Redis..."
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è Redis
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º
    docker-compose -f "$COMPOSE_FILE" up -d
    
    log_info "–û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
NO_BACKUP=false
ROLLBACK_TIMESTAMP=""

while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            show_help
            exit 0
            ;;
        -f|--file)
            COMPOSE_FILE="$2"
            shift 2
            ;;
        -t|--timeout)
            HEALTH_CHECK_TIMEOUT="$2"
            shift 2
            ;;
        --no-backup)
            NO_BACKUP=true
            shift
            ;;
        --rollback)
            ROLLBACK_TIMESTAMP="$2"
            shift 2
            ;;
        *)
            log_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            show_help
            exit 1
            ;;
    esac
done

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è graceful shutdown
trap 'log_error "–î–µ–ø–ª–æ–π –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"; exit 1' INT TERM

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
if [ -n "$ROLLBACK_TIMESTAMP" ]; then
    rollback_to_backup "$ROLLBACK_TIMESTAMP"
else
    deploy
fi
