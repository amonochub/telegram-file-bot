# Улучшенная конфигурация Docker Compose для продакшена
services:
  bot:
    build: .
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - YANDEX_DISK_TOKEN=${YANDEX_DISK_TOKEN}
      - ALLOWED_USER_ID=${ALLOWED_USER_ID}
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-100000000}
      - UPLOAD_DIR=${UPLOAD_DIR:-/bot_files}
      - TEMP_DIR=${TEMP_DIR:-temp}
      - CACHE_TTL=${CACHE_TTL:-3600}
      - MAX_BUFFER_SIZE=${MAX_BUFFER_SIZE:-100}
      - CBR_API_URL=${CBR_API_URL:-https://www.cbr.ru/scripts/XML_daily.asp?date_req={for_date}}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./temp:/app/temp
    healthcheck:
      test: ["CMD", "python", "-c", "import app.main; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    networks:
      - bot_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  worker:
    build: .
    command: celery -A app.handlers.client_calc worker --loglevel=info
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - YANDEX_DISK_TOKEN=${YANDEX_DISK_TOKEN}
      - ALLOWED_USER_ID=${ALLOWED_USER_ID}
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./temp:/app/temp
    healthcheck:
      test: ["CMD", "celery", "inspect", "ping", "-A", "app.handlers.client_calc"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    networks:
      - bot_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    networks:
      - bot_network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

networks:
  bot_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis_data:
    driver: local
