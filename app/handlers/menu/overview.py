"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ–±–∑–æ—Ä–∞ –ø–∞–ø–æ–∫
"""

import structlog
from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from app.constants.messages import OVERVIEW_MENU_TEXT, LOG_BROWSE_MENU_TRIGGERED
from app.keyboards.menu import main_menu
from app.utils.logging_context import log_handler_call, log_handler_error
from app.utils.navigation import navigate_to_menu

router = Router()
log = structlog.get_logger()


@router.message(F.text == OVERVIEW_MENU_TEXT)
async def browse_menu(message: Message, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üìÇ –û–±–∑–æ—Ä –ø–∞–ø–æ–∫"

    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state: –ö–æ–Ω—Ç–µ–∫—Å—Ç –∫–æ–Ω–µ—á–Ω–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∞
    """
    try:
        # –õ–æ–≥–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
        log_handler_call("browse_menu", message, menu_text=message.text)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        await navigate_to_menu(state, "overview", action="browse_folders")

        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
        await state.clear()

        # –í—ã–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        from ..browse import files_command

        await files_command(message)

    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
        log_handler_error("browse_menu", message, e)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await message.answer(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –æ–±–∑–æ—Ä–∞ –ø–∞–ø–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=main_menu()
            )
        except Exception as send_error:
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
            log_handler_error("browse_menu_send_error", message, send_error)
