"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫—É—Ä—Å–æ–≤ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –ë–∞–Ω–∫–∞
"""

import structlog
from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from app.config import settings
from app.constants.messages import (
    CBR_RATES_MENU_TEXT,
    CBR_SUBSCRIBE_SUCCESS,
    CBR_UNSUBSCRIBE_SUCCESS,
    LOG_CBR_RATES_MENU_TRIGGERED,
)
from app.keyboards.menu import main_menu
from app.services.cbr_notifier import CBRNotificationService

router = Router()
log = structlog.get_logger()


@router.message(F.text == CBR_RATES_MENU_TEXT)
async def cbr_rates_menu(message: Message, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üìà –ö—É—Ä—Å—ã –¶–ë"
    –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫—É—Ä—Å–∞—Ö –¶–ë

    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state: –ö–æ–Ω—Ç–µ–∫—Å—Ç –∫–æ–Ω–µ—á–Ω–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∞
    """
    log.info(LOG_CBR_RATES_MENU_TRIGGERED, text=message.text, user_id=message.from_user.id)
    await state.clear()

    try:
        service = CBRNotificationService(message.bot, settings.redis_url)
        await service.connect()
        user_id = message.from_user.id

        if user_id in service.subscribers:
            await service.unsubscribe_user(user_id)
            log.info("cbr_user_unsubscribed", user_id=user_id)
            await message.answer(
                "‚úÖ –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∫—É—Ä—Å–∞—Ö –¶–ë.\n–ë–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∫—É—Ä—Å–∞—Ö.",
                reply_markup=main_menu(),
            )
        else:
            await service.subscribe_user(user_id)
            log.info("cbr_user_subscribed", user_id=user_id)
            await message.answer(
                "‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫—É—Ä—Å–∞—Ö –¶–ë!\n\n"
                "–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å—Ä–∞–∑—É, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –¶–ë –æ–ø—É–±–ª–∏–∫—É–µ—Ç –Ω–æ–≤—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç.\n"
                "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç –æ–±—ã—á–Ω–æ –ø–æ—Å–ª–µ 11:00 –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏.",
                reply_markup=main_menu(),
            )
    except Exception as e:
        log.error("cbr_subscription_error", user_id=message.from_user.id, error=str(e))
        await message.answer(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –ø–æ–¥–ø–∏—Å–∫–æ–π –Ω–∞ –∫—É—Ä—Å—ã –¶–ë.\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
            reply_markup=main_menu(),
        )
